<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>记录一次面试经历</title>
      <link href="/2019/02/15/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/"/>
      <url>/2019/02/15/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/</url>
      <content type="html"><![CDATA[<p></p><h5>自己比较渣渣,记录这次的面试心得吧~~写给自己<h5><p></p><ul><li>首先分析面试题<br>第一题感觉比较简单 大概的题目就是如下:<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$tmp = <span class="number">1</span> == <span class="string">"A"</span> ? <span class="number">1</span> : <span class="number">2</span> ;</span><br><span class="line"><span class="keyword">echo</span> $tmp;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>这个题的考点很简单如果你有强类型语言的基础的话你首先回想到的是类型转换的问题,在php中会自动把字符串转换为整型，<br>字符串a的开头不包含任何数字，所以会被转为0.</p></blockquote><ul><li>第二题就是考验正则表达式的题: 大致如下<ul><li>从一个文本中获取所有的图片信息并下载，写一个function<blockquote><p>一开始自认自己正则还是没有问题的，然后考虑问题不全面导致我只考虑了后缀是jpg or  png 等<br>而没有考虑到是image开头的，面试官提示:下载图片后缀不一定会有格式。这个小弟真的不知道(受教)</p></blockquote></li></ul></li><li><p>后的题是分析nginx的log的问题 感觉就是考验grep 或者你awk  sed 的基础比较简单,问题大概就是统计请求某个最高的或者<br>在某个时间段的访问情况 大概就是考验 -head -sort 等</p></li><li><p>后面有个mysql的题 感觉还是比较简单的就大致过一下 主要就是考验是否会使用group by 和having 的配合</p></li><li><p>重点比较有意思的是最后一个题，判断给定二维平面内的四个点，判断这四个点是否能组成正方形。坐标(x,y)为整数</p><blockquote><p>首先我比较笨，考虑到的思路就是  判断 在x轴的2个坐标是否在一条线，在判断y轴的x坐标是否在一条线上，然后在去判断对角<br>回来后发现有更好的思路那就是: 邻边相等且对角线相等的四边形是正方形（翻了翻数学书)哈哈<br>分析完问题，这个题就很简单了。</p></blockquote></li><li><p></p><h5> 一面的面试问题问的很细致也很多 比较深<h5><br>常用设计模式 算法的题到是没问,偏应用层,nginx调优,mq的使用 , redis 的使用, 并发的考虑, 运维的知识也有一点.感觉很聊的来<br>也聊了下java php 的优缺点 还有自己的优缺点，微服务的优点缺点。<p></p></h5></h5></li><li>二面比较有意思开个公司的app后让你去设计某个功能感觉考察的地方就是你对整个功能的实现和理解,比较有意思,本菜鸟就是被问到的是如何设计某个<br>搜索的问题.然后有意思的问题是给定2个坐标,在2个坐标周围有100个饭店(好饿),怎么算出2个坐标之间的最近的饭店.（变相考验你的逻辑思维)<br>写这个总结的原因是因为自己有很多不足,自己的心态不太好,面试官给我的感觉很好~感觉很聊得来(end)</li></ul></h5></h5>]]></content>
      
      <categories>
          
          <category> HTTP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用lumen+mongdo</title>
      <link href="/2018/08/23/%E4%BD%BF%E7%94%A8lumen-mongdo/"/>
      <url>/2018/08/23/%E4%BD%BF%E7%94%A8lumen-mongdo/</url>
      <content type="html"><![CDATA[<ol><li>环境介绍:</li></ol><ul><li>php 7.2.7 <a href="https://github.com/jenssegers/laravel-mongodb" target="_blank" rel="noopener">扩展</a>版本为3.4</li><li>Lumen (5.6.4) (Laravel Components 5.6.*)</li><li>mongo  version v4.0.1<a id="more"></a></li></ul><ol start="2"><li>docker-compose 介绍<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">version: "3"</span><br><span class="line">services:</span><br><span class="line">  mongodb:</span><br><span class="line">    image: 'bitnami/mongodb:latest'</span><br><span class="line">    environment:</span><br><span class="line">      - MONGODB_USERNAME=wll</span><br><span class="line">      - MONGODB_PASSWORD=wangll123</span><br><span class="line">      - MONGODB_DATABASE=my_database</span><br><span class="line">    ports:</span><br><span class="line">      - "27017:27017"</span><br><span class="line">    volumes:</span><br><span class="line">      - ./mongodb-persistence:/bitnami</span><br><span class="line">    networks:</span><br><span class="line">      - net-mongodb</span><br><span class="line">      - net-php</span><br><span class="line">  rabbitmq:</span><br><span class="line">    image: rabbitmq:3.7.3-management</span><br><span class="line">    environment:</span><br><span class="line">      - mq.rabbit.username=wangll</span><br><span class="line">      - mq.rabbit.password=wangll</span><br><span class="line">    ports:</span><br><span class="line">      - "15672:15672"</span><br><span class="line">      - "5672:5672"</span><br><span class="line">    volumes:</span><br><span class="line">      - ./conf/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:rw</span><br><span class="line">      - ./conf/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:rw</span><br><span class="line">    networks:</span><br><span class="line">      - net-rabbitmq</span><br><span class="line">      - net-php</span><br><span class="line">  nginx:</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    ports:</span><br><span class="line">      - "80:80"</span><br><span class="line">      - "8899:8899"</span><br><span class="line">      - "7777:7777"</span><br><span class="line">      - "5566:5566"</span><br><span class="line">      - "443:443"</span><br><span class="line">    volumes:</span><br><span class="line">      - ./www/:/var/www/html/:rw</span><br><span class="line">      - ./conf/conf.d:/etc/nginx/conf.d/:ro</span><br><span class="line">      - ./conf/nginx.conf:/etc/nginx/nginx.conf:ro</span><br><span class="line">      - ./log/:/var/log/dnmp/:rw</span><br><span class="line">    networks:</span><br><span class="line">      - net-php</span><br><span class="line">      - net-nginx</span><br><span class="line"></span><br><span class="line">  php:</span><br><span class="line">    build: ./php/php72/</span><br><span class="line">    expose:</span><br><span class="line">      - "9000"</span><br><span class="line">      - "7878"</span><br><span class="line">    ports:</span><br><span class="line">      - "7878:7878"</span><br><span class="line">    volumes:</span><br><span class="line">      - ./www/:/var/www/html/:rw</span><br><span class="line">      - ./conf/php.ini:/usr/local/etc/php/php.ini:ro</span><br><span class="line">      - ./conf/php-fpm.conf:/usr/local/etc/php-fpm.d/www.conf:rw</span><br><span class="line">      - ./log/:/var/log/dnmp/:rw</span><br><span class="line">    networks:</span><br><span class="line">      - net-php</span><br><span class="line">      - net-mysql</span><br><span class="line">      - net-redis</span><br><span class="line">      - net-nginx</span><br><span class="line"></span><br><span class="line">  mysql:</span><br><span class="line">    image: mysql:8.0</span><br><span class="line">    ports:</span><br><span class="line">      - "3306:3306"</span><br><span class="line">    volumes:</span><br><span class="line">      - ./conf/mysql.cnf:/etc/mysql/conf.d/mysql.cnf:ro</span><br><span class="line">      - ./mysql/:/var/lib/mysql/:rw</span><br><span class="line">    networks:</span><br><span class="line">      - net-mysql</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_ROOT_PASSWORD: "123456"</span><br><span class="line"></span><br><span class="line">  redis:</span><br><span class="line">    image: redis:4.0</span><br><span class="line">    networks:</span><br><span class="line">      - net-redis</span><br><span class="line">    ports:</span><br><span class="line">      - "6379:6379"</span><br><span class="line"></span><br><span class="line">  phpmyadmin:</span><br><span class="line">    image: phpmyadmin/phpmyadmin:latest</span><br><span class="line">    ports:</span><br><span class="line">      - "8080:80"</span><br><span class="line">    networks:</span><br><span class="line">      - net-mysql</span><br><span class="line">    environment:</span><br><span class="line">      - PMA_HOST=mysql</span><br><span class="line">      - PMA_PORT=3306</span><br><span class="line"></span><br><span class="line">  phpredisadmin:</span><br><span class="line">    image: erikdubbelboer/phpredisadmin:latest</span><br><span class="line">    ports:</span><br><span class="line">      - "8081:80"</span><br><span class="line">    networks:</span><br><span class="line">      - net-redis</span><br><span class="line">    environment:</span><br><span class="line">      - REDIS_1_HOST=redis</span><br><span class="line">      - REDIS_1_PORT=6379</span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">  net-rabbitmq:</span><br><span class="line">  net-php:</span><br><span class="line">  net-mysql:</span><br><span class="line">  net-redis:</span><br><span class="line">  net-nginx:</span><br><span class="line">  net-mongodb:</span><br></pre></td></tr></table></figure></li></ol><ul><li><p>php要安装对应mongodb的扩展.部分php,dockerfile</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&amp;&amp; pecl install swoole \</span><br><span class="line"> 21     &amp;&amp; pecl install mongodb \</span><br><span class="line"> 22     &amp;&amp; docker-php-ext-enable swoole \</span><br><span class="line"> 23     &amp;&amp; docker-php-ext-enable  mongodb \</span><br></pre></td></tr></table></figure></li><li><p>设置好用户密码和数据库后接下来就是lumen中的配置</p></li></ul><ol><li>databse.php（vendor/laravel/lumen-framework.config）添加<br>mongodb的配置<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">'mongodb' =&gt; array(</span><br><span class="line">            'driver'   =&gt; 'mongodb',</span><br><span class="line">            'host'     =&gt; env('MONGODB_HOST', 'localhost'),</span><br><span class="line">            'port'     =&gt; env('MONGODB_PORT', 27017),</span><br><span class="line">            'database' =&gt; env('MONGODB_DATABASE', ''),</span><br><span class="line">            'username' =&gt; env('MONGODB_USERNAME', ''),</span><br><span class="line">            'password' =&gt; env('MONGODB_PASSWORD', ''),</span><br><span class="line">            'options' =&gt; array(</span><br><span class="line">                'database' =&gt; 'my_database' //Sets the auth DB</span><br><span class="line">            )</span><br><span class="line">        )</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>唯一注意的就是options中的database就是设置好的数据库</p></blockquote><ul><li>下面就是.env的配置<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DB_CONNECTION=mongodb</span><br><span class="line">MONGODB_HOST=mongodb</span><br><span class="line">MONGODB_USERNAME=wll</span><br><span class="line">MONGODB_PASSWORD=wangll123</span><br><span class="line">MONGODB_DATABASE=my_database</span><br><span class="line">MONGODB_PORT=27017</span><br></pre></td></tr></table></figure></li></ul><ol><li>注意的就是MONGODB_HOST 不是localhost 也不是127.0.0.1 而是我们设置的<br>容器的名字<br>orver~</li></ol>]]></content>
      
      <categories>
          
          <category> lumen+mongodb </category>
          
          <category> mongodb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose lumen+mongodb </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>正则表达式总结</title>
      <link href="/2018/08/15/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%80%BB%E7%BB%93/"/>
      <url>/2018/08/15/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<h5>正则表达式使用总结</h5><ul><li><p>单个字符’ab’</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ grep <span class="string">'ab'</span> /etc/passwd</span><br><span class="line"><span class="comment"># User Database</span></span><br><span class="line"><span class="comment"># See the opendirectoryd(8) man page for additional information about</span></span><br><span class="line">_jabber:*:84:84:Jabber XMPP Server:/var/empty:/usr/bin/<span class="literal">false</span></span><br></pre></td></tr></table></figure></li><li><p>范围匹配 []  范围匹配取反 ^  如:  grep ‘[^0-9]’ /etc/passwd 匹配除了数字外的任意字符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ grep <span class="string">'[0-9]'</span> /etc/passwd</span><br><span class="line"><span class="comment"># See the opendirectoryd(8) man page for additional information about</span></span><br><span class="line">nobody:*:-2:-2:Unprivileged User:/var/empty:/usr/bin/<span class="literal">false</span></span><br><span class="line">root:*:0:0:System Administrator:/var/root:/bin/sh</span><br><span class="line">daemon:*:1:1:System Services:/var/root:/usr/bin/<span class="literal">false</span></span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><ul><li>. 代表匹配任意字符 如: grep ‘.’ /etc/passwd</li></ul><blockquote><p>当^在[]范围内的时候表示取反 . 代表转义取.本身</p></blockquote><ul><li><p>边界字符: ^ 头字符 表示已什么开头的字符 注意和[^0-9]的区别</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ grep <span class="string">'^root'</span> /etc/passwd</span><br><span class="line">root:*:0:0:System Administrator:/var/root:/bin/sh</span><br></pre></td></tr></table></figure></li><li><p>尾字符: $ 美元符号 :false$  如果是空行的话就直接使用 ^$ 代表获取空行</p></li><li>元字符(普通字符或者特殊字符) : </li><li>\w 匹配任何字符包括下划线([A-Za-z0-9_])</li><li>\W 匹配任何非字符([^A-Za-z0-9_])</li><li><p>\b 代表单词分隔: 加入找出passwd中x代表密码的那行。。如果不使用\b分隔会匹配出其他x出现的字符  so 正确的匹配规则应该是 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~ grep <span class="string">'\bx\b'</span> /etc/passwd (乌班图系统下测试)</span><br></pre></td></tr></table></figure></li><li><p>字符组合</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//查找出字符长度为4，并且以r开头以t结尾的匹配</span><br><span class="line">➜  ~ grep <span class="string">'r..t'</span> /etc/passwd</span><br><span class="line"><span class="comment"># Note that this file is consulted directly only when the system is running</span></span><br><span class="line"><span class="comment"># in single-user mode.  At other times this information is provided by</span></span><br><span class="line"><span class="comment"># Open Directory.</span></span><br><span class="line"><span class="comment"># See the opendirectoryd(8) man page for additional information about</span></span><br><span class="line"><span class="comment"># Open Directory.</span></span><br><span class="line">root:*:0:0:System Administra</span><br></pre></td></tr></table></figure></li><li><p>重复</p></li><li>*: 零次或多次匹配前面的字符或子表达式</li><li>+: 一次或多次匹配前面的字符或子表达式</li><li>?: 零次或一次匹配前面的字符或子表达式<blockquote><p>在使用+和?的时候。。切记加上转义符号\ 不加的话会匹配本意 在使用* 或者?的时候 会出现空行的匹配这个也要注意下~ 重复某个字符串的话使用()包裹起来 但是也要转义’(se)\?’</p></blockquote></li><li><p>重复特定次数: {n,m} 也要转义 : grep ‘[0-9]{2,3}‘ /etc/passwd  查找出来2位或者3位的数字</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ grep <span class="string">'[0-9]\&#123;2,3\&#125;'</span> /etc/passwd</span><br><span class="line">_taskgated:*:13:13:Task Gate Daemon:/var/empty:/usr/bin/<span class="literal">false</span></span><br><span class="line">_networkd:*:24:24:Network Services:/var/networkd:/usr/bin/<span class="literal">false</span></span><br><span class="line">_installassistant:*:25:25:Install Assistant:/var/empty:/usr/bin/<span class="literal">false</span></span><br><span class="line">_lp:*:26:26:Printing Services:/var/spool/cups:/usr/bin/<span class="literal">false</span></span><br><span class="line">_postfix:*:27:27:Postfix Mail Server:/var/spool/postfix:/usr/bin/<span class="literal">false</span></span><br></pre></td></tr></table></figure></li><li><p>* : {0,}</p></li><li>+ : {1,}</li><li>? : {0,1}</li></ul><h5>逻辑或匹配 | 记得转义</h5><blockquote><p> 正则一般都是贪婪模式匹配。。so 多改改吧~多练练。</p></blockquote><h5> sed 总结</h5><br><em> sed 是行处理是不会改变内容的。除非重定向</em> sed 有两种格式<br>1. 命令行模式<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed [options] <span class="string">'command'</span> file</span><br></pre></td></tr></table></figure><br><br>2. 脚本模式<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -f scriptfile</span><br></pre></td></tr></table></figure><br><br>&gt; options : 常用的 -e; -n command: 行定位(一般都是正则)+sed命令(操作)<br><br><em> -n -p 一般都是配合使用的 如果只使用-p的话会出现重复(跟sed的机制有关)</em> 定位一行 : x; /pattern/<br><em> 定位几行 : x,y; /pattern/,x;   /pattern1/,/pattern2/;   x,y! 取反</em> 定位间隔行 : first~step       如: nl /etc/passwd |sed -n ‘1~2p’<br><em> 基本操作命令 -a 新增行/i 插入行   -c 代替行   -d 删除行  如 nl /etc/passwd |sed ‘5a ============’ 在第五航后面新增===  i的话实在行前插入=</em> 如在ssh_config末尾下添加一些配置 port211 xxxx<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">'$a port211 \n   xxxxx \n xxxx'</span> ssh_config</span><br></pre></td></tr></table></figure><br><br><em> 如删除a.txt文件中的所有的空行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">'/^$/d'</span> a.tzt</span><br></pre></td></tr></table></figure></em> -s 替换命令如果全局替换 需要加-g 全局替换  sed ‘s/false/true/g’ a.txt  吧所有的false替换为true<br>* 如要找出本机en0网卡的ip<br>&gt; en0: flags=8863&lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&gt; mtu 1500<br>    ether 8c:85:90:72:dc:25<br>    inet 172.17.2.80 netmask 0xfffffc00 broadcast 172.17.3.255<br>    media: autoselect<br>    status: active<br><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig en0 | sed -n <span class="string">'/inet/p'</span> | sed <span class="string">'s/inet//'</span> | sed <span class="string">'s/n.*//'</span></span><br></pre></td></tr></table></figure><br><br><h5>高级技巧</h5><ul><li>{} :多个sed命令,用;好分割</li><li>-n : 读取下一行输入行(用于下一个命令处理)</li><li>&amp; : 替换固定的字符串</li><li>元字符 \u \U \l \L :转换为大小写</li><li>() 替换部分字符串 :   sed ‘s/w1(w2)w3/\1/‘ a.log  把\1 表示w2</li><li>-r : 复制指定的文件插入到匹配的行</li><li>-w : 复制匹配行拷贝到指定文件中 会覆盖源文件</li><li>q : 退出sed命令    如: sed ‘s/abc/q’ aa.log</li></ul><h5>awk总结</h5><ul><li><p>awk [options] ‘command’ file</p><blockquote><p>内置变量</p></blockquote></li><li><p>$0 : 表示整个当前行</p></li><li>$1 : 表示每行的第一个字段</li><li>-F ‘:’ 指定分隔符  默认是空格为分隔符</li><li>NR : 每行的记录号 (行号)</li><li>NF : 字段熟练 (列号)</li><li>FILENAME : 文件名</li></ul><blockquote><p>逻辑表达式</p></blockquote><ul><li>~ , !~ : 匹配正则表达式</li><li>== , !=, =, &lt;, &gt; : 判断逻辑表达式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -F <span class="string">':'</span> <span class="string">'$1~/^r.*/&#123;print $1&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>awk 扩展格式  BEGIN {print “start” } pattern {commands} END {print “end”}<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ ll -s  | awk <span class="string">'BEGIN&#123; size =0&#125;&#123;size+=$6&#125; END &#123;print "size is " size/1024/1024"M"&#125;'</span></span><br><span class="line">size is 0.00271969M</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ awk -F <span class="string">':'</span> <span class="string">'BEGIN&#123;count = 0&#125; &#123;if ($3&gt; 100) name[count++]=$1&#125; END&#123;for (i =0; i&lt;count;i++) print i, name[i]&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 正则表达式, awk, sed 使用总结 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>记录docker使用swoole+nginx调试过程</title>
      <link href="/2018/07/31/%E8%AE%B0%E5%BD%95docker%E4%BD%BF%E7%94%A8swoole-nginx%E8%B0%83%E8%AF%95%E8%BF%87%E7%A8%8B/"/>
      <url>/2018/07/31/%E8%AE%B0%E5%BD%95docker%E4%BD%BF%E7%94%A8swoole-nginx%E8%B0%83%E8%AF%95%E8%BF%87%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h5>假设php及swoole和lumen环境已经使用docker自行搭建好(p7.2 swoole4.0.4 lumen5.6)</h5><ol><li>php 需要安装swoole扩展</li></ol><a id="more"></a><h5>待启动的dockerfile</h5><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">"3"</span></span><br><span class="line">services:</span><br><span class="line">  rabbitmq:</span><br><span class="line">    image: rabbitmq:<span class="number">3.7</span>.<span class="number">3</span>-management</span><br><span class="line">    environment:</span><br><span class="line">      - mq.rabbit.username=wangll</span><br><span class="line">      - mq.rabbit.password=wangll</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">"15672:15672"</span></span><br><span class="line">    volumes:</span><br><span class="line">      - ./conf/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:rw</span><br><span class="line">      - ./conf/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:rw</span><br><span class="line">  nginx:</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">"80:80"</span></span><br><span class="line">      - <span class="string">"8899:8899"</span></span><br><span class="line">      - <span class="string">"7777:7777"</span></span><br><span class="line">      - <span class="string">"5566:5566"</span></span><br><span class="line">      - <span class="string">"443:443"</span></span><br><span class="line">    volumes:</span><br><span class="line">      - ./www/:/var/www/html/:rw</span><br><span class="line">      - ./conf/conf.d:/etc/nginx/conf.d/:ro</span><br><span class="line">      - ./conf/nginx.conf:/etc/nginx/nginx.conf:ro</span><br><span class="line">      - ./log/:/var/log/dnmp/:rw</span><br><span class="line">    networks:</span><br><span class="line">      - net-php</span><br><span class="line">      - net-nginx</span><br><span class="line">  php:</span><br><span class="line">    build: ./php/php72/</span><br><span class="line">    <span class="keyword">expose</span>:</span><br><span class="line">      - <span class="string">"9000"</span></span><br><span class="line">      - <span class="string">"7878"</span></span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">"7878:7878"</span></span><br><span class="line">    volumes:</span><br><span class="line">      - ./www/:/var/www/html/:rw</span><br><span class="line">      - ./conf/php.ini:/usr/local/etc/php/php.ini:ro</span><br><span class="line">      - ./conf/php-fpm.conf:/usr/local/etc/php-fpm.d/www.conf:rw</span><br><span class="line">      - ./log/:/var/log/dnmp/:rw</span><br><span class="line">    networks:</span><br><span class="line">      - net-php</span><br><span class="line">      - net-mysql</span><br><span class="line">      - net-redis</span><br><span class="line">      - net-nginx</span><br><span class="line"></span><br><span class="line">  mysql:</span><br><span class="line">    image: mysql:<span class="number">8.0</span></span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">"3306:3306"</span></span><br><span class="line">    volumes:</span><br><span class="line">      - ./conf/mysql.cnf:/etc/mysql/conf.d/mysql.cnf:ro</span><br><span class="line">      - ./mysql/:/var/lib/mysql/:rw</span><br><span class="line">    networks:</span><br><span class="line">      - net-mysql</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_ROOT_PASSWORD: <span class="string">"123456"</span></span><br><span class="line"></span><br><span class="line">  redis:</span><br><span class="line">    image: redis:<span class="number">4.0</span></span><br><span class="line">    networks:</span><br><span class="line">      - net-redis</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">"6379:6379"</span></span><br><span class="line"></span><br><span class="line">  phpmyadmin:</span><br><span class="line">    image: phpmyadmin/phpmyadmin:latest</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">"8080:80"</span></span><br><span class="line">    networks:</span><br><span class="line">      - net-mysql</span><br><span class="line">    environment:</span><br><span class="line">      - PMA_HOST=mysql</span><br><span class="line">      - PMA_PORT=<span class="number">3306</span></span><br><span class="line"></span><br><span class="line">  phpredisadmin:</span><br><span class="line">    image: erikdubbelboer/phpredisadmin:latest</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">"8081:80"</span></span><br><span class="line">    networks:</span><br><span class="line">      - net-redis</span><br><span class="line">    environment:</span><br><span class="line">      - REDIS_1_HOST=redis</span><br><span class="line">      - REDIS_1_PORT=<span class="number">6379</span></span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">  net-php:</span><br><span class="line">  net-mysql:</span><br><span class="line">  net-redis:</span><br><span class="line">  net-nginx:</span><br></pre></td></tr></table></figure><blockquote><p> 要点就是要配置互联nginx php 对外暴露端口</p></blockquote><ol start="2"><li>nginx 配置文件</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">          proxy_pass http://php:7878;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>要点就是要使用容器的名字+端口来转发</p></blockquote><ol start="3"><li>lumen/laravel swoole 的composer 包在<a href="https://github.com/swooletw/laravel-swoole" target="_blank" rel="noopener">这里</a></li></ol><p>感谢各位对小弟的帮助:</p><ul><li>会敲代码的喵</li><li>道德帝@汉和.福建</li><li>0</li><li>羊</li></ul>]]></content>
      
      <categories>
          
          <category> docker-compose swoole+nginx笔记 </category>
          
          <category> lumen+swoole+nginx+php7 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> lumen </tag>
            
            <tag> php </tag>
            
            <tag> swoole </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>docker compose 构建环境</title>
      <link href="/2018/07/23/docker-compose-%E6%9E%84%E5%BB%BA%E7%8E%AF%E5%A2%83/"/>
      <url>/2018/07/23/docker-compose-%E6%9E%84%E5%BB%BA%E7%8E%AF%E5%A2%83/</url>
      <content type="html"><![CDATA[<ol><li>搭建一个php7的开发环境，需要Nginx/PHP-FPM/MySQL/Redis进行配合<a id="more"></a>目录结构<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">├── README.md</span><br><span class="line">├── docker-compose.yml</span><br><span class="line">├── logs</span><br><span class="line">│   └── nginx</span><br><span class="line">├── mysql</span><br><span class="line">│   ├── conf</span><br><span class="line">│   └── data</span><br><span class="line">├── nginx</span><br><span class="line">│   ├── Dockerfile</span><br><span class="line">│   ├── conf</span><br><span class="line">│   └── src</span><br><span class="line">├── php7</span><br><span class="line">│   ├── Dockerfile</span><br><span class="line">│   ├── docker-compose.yml</span><br><span class="line">│   ├── etc</span><br><span class="line">│   ├── extensions</span><br><span class="line">│   └── src</span><br><span class="line">├── redis</span><br><span class="line">│   ├── Dockerfile</span><br><span class="line">│   ├── conf</span><br><span class="line">│   ├── data</span><br><span class="line">│   └── src</span><br><span class="line">├── start.sh</span><br><span class="line">├── stop.sh</span><br><span class="line">└── www</span><br><span class="line">    └── abc</span><br></pre></td></tr></table></figure></li></ol><p></p><h4>Mysql官方镜像<h4><br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">dev.mysql.srv:</span><br><span class="line">  image: mysql</span><br><span class="line">  volumes:</span><br><span class="line">    - ./mysql/data:/var/lib/mysql</span><br><span class="line">      - ./mysql/conf:/etc/mysql/conf.d</span><br><span class="line">  ports:</span><br><span class="line">    - <span class="string">"3307:3306"</span></span><br><span class="line">  restart: always</span><br><span class="line">  environment:</span><br><span class="line">    MYSQL_ROOT_PASSWORD: <span class="number">123456</span></span><br><span class="line">  networks:</span><br><span class="line">    - default</span><br></pre></td></tr></table></figure><p></p><ul><li><font color="red">image:</font>是制定依赖的镜像，是Docker提供的镜像资源</li><li><font color="red">volumes:</font>数据卷所挂载路径设置，主要是MySQL的数据保存的路径设置与配置文件的设置。<br>它的主要作用是持久化数据，避免容器销毁后内部数据丢失</li><li><font color="red">ports:</font>暴露到宿主机的端口。这个没啥说的，<br>就是为了可以在宿主机访问到容器内部的服务</li><li><font color="red">environment:</font>设置镜像的环境变量，<br>也可以进入镜像通过：echo $MYSQL_ROOT_PASSWORD查看其值</li><li><font color="red">networks:</font>设置网络，让所有的容器在一个网络中，方便容器互联互通<br><em>需要注意的是:dev.mysql.srv ，是我为mysql服务取的名字。取一个好的名字，非常便于后续容器互联的使用，比如这个名字，<br>如果php代码需要填写mysql的host。则可以直接使用它</em></li></ul><p></p><h4>其他服务(大同小异)<h4><br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">dev.nginx.srv:</span><br><span class="line">  image: nginx</span><br><span class="line">  build: ./nginx</span><br><span class="line">  volumes:</span><br><span class="line">    - ./nginx/conf:/home/work/app/nginx/conf</span><br><span class="line">      - ./www:/home/work/www</span><br><span class="line">  ports:</span><br><span class="line">    - <span class="string">"80:8080"</span></span><br><span class="line">      - <span class="string">"443:443"</span></span><br><span class="line">  restart: always</span><br><span class="line">  networks:</span><br><span class="line">    - default</span><br><span class="line">  depends_on:</span><br><span class="line">      - dev.php-fpm.srv</span><br><span class="line">dev.redis.srv:</span><br><span class="line">  image: redis</span><br><span class="line">  build: ./redis</span><br><span class="line">  volumes:</span><br><span class="line">    - ./redis/conf:/home/work/app/redis/conf</span><br><span class="line">      - ./redis/data:/home/work/app/redis/data</span><br><span class="line">  ports:</span><br><span class="line">      - <span class="string">"6379:6379"</span></span><br><span class="line">  restart: always</span><br><span class="line">  networks:</span><br><span class="line">      - default</span><br><span class="line">dev.php-fpm.srv:</span><br><span class="line">  image: php</span><br><span class="line">  build: ./php7</span><br><span class="line">  volumes:</span><br><span class="line">    - ./php7/etc:/home/work/app/php/etc</span><br><span class="line">    - ./www:/home/work/www</span><br><span class="line">  ports:</span><br><span class="line">    - <span class="string">"9000:9000"</span></span><br><span class="line">  restart: always</span><br><span class="line">  networks:</span><br><span class="line">    - default</span><br></pre></td></tr></table></figure><p></p><p><em>唯一的区别就是多了一个build</em></p><ul><li>这就是上面说到的这三个镜像都是我用Dockerfile定制的有关。<br>可以在对应的 build 指定的目录下看到 Dockerfile 这个文件<br><em>另外一个需要注意的地方是Nginx中配置的 depends_on 选项，他的作用是指定依赖，<br>因为Nginx中配置了php-fpm。所以它启动前要确保php-fpm已经启动后，<br>他才能正常的启动</em></li></ul><p></p><h4>启动</h4><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./start.sh</span><br></pre></td></tr></table></figure><p></p></h4></h4></h4></h4>]]></content>
      
      <categories>
          
          <category> docker-compose搭建php环境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> docker-compose </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>lumen重写validationException</title>
      <link href="/2018/07/22/lumen%E9%87%8D%E5%86%99validation%E5%BC%82%E5%B8%B8/"/>
      <url>/2018/07/22/lumen%E9%87%8D%E5%86%99validation%E5%BC%82%E5%B8%B8/</url>
      <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">throwValidationException</span><span class="params">(Request $request, $validator)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $response = [</span><br><span class="line">        <span class="string">'code'</span> =&gt; <span class="number">400</span>,</span><br><span class="line">        <span class="string">'msg'</span> =&gt; $validator-&gt;errors()-&gt;first(),</span><br><span class="line">        <span class="string">'data'</span> =&gt; []</span><br><span class="line">    ];</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> ValidationException($validator, $response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> lumen </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lumen </tag>
            
            <tag> laravel </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>docker安装</title>
      <link href="/2018/07/21/docker%E5%AE%89%E8%A3%85/"/>
      <url>/2018/07/21/docker%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<ol><li>使用 root 权限登录 Centos。确保 yum 包更新到最新。 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum update</span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li>卸载旧版本(如果安装过旧版本的话)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove docker docker-common docker-selinux docker-engine</span><br></pre></td></tr></table></figure></li></ol><a id="more"></a><ol start="3"><li>安装需要的软件包， yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li>设置yum源<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">    sudo yum-config-manager –add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line">``` </span><br><span class="line">        </span><br><span class="line">5. 可以查看所有仓库中所有docker版本，并选择特定版本安装</span><br><span class="line">```bash</span><br><span class="line">   yum list docker-ce --showduplicates | sort -r</span><br></pre></td></tr></table></figure></li></ol><ol start="6"><li>安装docker <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install docker-ce <span class="comment">#由于repo中默认只开启stable仓库，故这里安装的是最新稳定版18.03.1-ce</span></span><br></pre></td></tr></table></figure></li></ol><ol start="7"><li><p>设置开机启动(option)</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker &amp;&amp; sudo systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><p><em>如果没设置开启启动请自行启动 [root@VM_4_202_centos ~]# service docker start</em></p></li><li><p>验证安装是否成功(有client和service两部分表示docker安装启动都成功了)</p><pre><code class="bash">docker version</code></pre><h6 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a><a href="https://github.com/charleskun/DockerFilesForPhpDev" target="_blank" rel="noopener">Dockerfile</a></h6></li></ol>]]></content>
      
      <categories>
          
          <category> docker安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mysql 数据使用logstash 导入elasticsearch</title>
      <link href="/2018/06/18/mysql-%E6%95%B0%E6%8D%AE%E4%BD%BF%E7%94%A8logstash-%E5%AF%BC%E5%85%A5elasticsearch/"/>
      <url>/2018/06/18/mysql-%E6%95%B0%E6%8D%AE%E4%BD%BF%E7%94%A8logstash-%E5%AF%BC%E5%85%A5elasticsearch/</url>
      <content type="html"><![CDATA[<ol><li>安装logstash插件logstash-input-jdbc<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/logstash-plug install --no-verify logstash-input-jdbc</span><br></pre></td></tr></table></figure></li></ol><a id="more"></a><ol start="2"><li>配置文件<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">  jdbc &#123;</span><br><span class="line">    #驱动绝对路径</span><br><span class="line">    jdbc_driver_library =&gt; "/root/mysql-connector-java-5.1.43-bin.jar"</span><br><span class="line">    #驱动类名</span><br><span class="line">    jdbc_driver_class =&gt; "com.mysql.jdbc.Driver"</span><br><span class="line">    #连接池配置, mysql数据库连接 DAHLIA 为数据库名</span><br><span class="line">    jdbc_connection_string =&gt; "jdbc:mysql://xxxxx:3306/DAHLIA"</span><br><span class="line">    #连接池配置, 使用前是否验证连接</span><br><span class="line">    jdbc_validate_connection =&gt; true</span><br><span class="line">    #连接池配置, 数据库用户名</span><br><span class="line">    jdbc_user =&gt; "foo"</span><br><span class="line">    #连接池配置, 数据库密码</span><br><span class="line">    jdbc_password =&gt; "bar"</span><br><span class="line">    #连接池配置, 是否启用分页, 启用后,需要使用 jdbc_page_size 设置每次查询的结果集大小</span><br><span class="line">    jdbc_paging_enabled =&gt; true</span><br><span class="line">    #连接池配置, 每次查询的结果集大小, 必须设置 jdbc_paging_enabled 为 true 才有效</span><br><span class="line">    jdbc_page_size =&gt; "1000"</span><br><span class="line">    #查询结果集的语句</span><br><span class="line">    statement =&gt; "select * from tablename where update_time &gt;:sql_last_value"</span><br><span class="line">    #使用增量列值,而不是时间戳; 默认值为false</span><br><span class="line">    #use_column_value =&gt; true</span><br><span class="line">    #当设置 use_column_value 为true时(不跟踪时间戳查询), 将跟踪此列值</span><br><span class="line">    #tracking_column =&gt; "update_time"</span><br><span class="line">    #不设置时,默认值为 numeric; 可选 numeric, timestamp</span><br><span class="line">    tracking_column_type =&gt; "numeric"</span><br><span class="line">    #每分钟执行一次</span><br><span class="line">    schedule =&gt; "* * * * *"</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">    mutate &#123;</span><br><span class="line">        #删除默认message字段</span><br><span class="line">        remove_field =&gt; ["@version"]</span><br><span class="line">        #把数据写入到 source 字段</span><br><span class="line">        source =&gt; "message"</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">    elasticsearch &#123;</span><br><span class="line">        hosts =&gt; ["127.0.0.1:9200"]</span><br><span class="line">        user =&gt; "foo"</span><br><span class="line">        password =&gt; "bar"</span><br><span class="line">        index =&gt; "news_info_shadow"</span><br><span class="line">        document_id =&gt; "%&#123;id&#125;"</span><br><span class="line">    &#125;</span><br><span class="line">    stdout &#123; codec =&gt; rubydebug &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ul><li>statement 参数可以替换为statement_filepath,从文件中执行sql查询;<a href="https://www.elastic.co/guide/en/logstash/current/plugins-inputs-jdbc.html#_configuring_sql_statement" target="_blank" rel="noopener">参照</a></li><li>本机启动多个logstash时,需要path.data 参数</li><li>logstash –path.data /path/to -f path/to/shipper.conf</li><li>jdbc_paging_enabled   jdbc_page_size 控制是否开启查询分页, 及分页大小; 默认100000, 根据机器内存抉择</li></ul><ol start="3"><li><p>定时增量导入<a href="https://www.elastic.co/guide/en/logstash/current/plugins-inputs-jdbc.html#_scheduling" target="_blank" rel="noopener">inputscheduling参数</a><br> 增量更新原理:把mysql的id 设为 es _id; 根据 sql_last_value 查出需要更新的数据,<br> 如果 _id 存在则更新,不存在则新增<br> 注意:</p><blockquote><p>se_column_value =&gt; false  时, 才可以跟踪时间戳</p></blockquote><p> <a href="https://www.elastic.co/guide/en/logstash/current/plugins-inputs-jdbc.html" target="_blank" rel="noopener">官方文档</a>里的参数还是要仔细看的<br> 发现网上有些文章, 在没有设置 use_column_value 为true的情况下 指定 tracking_column 为某个列值,<br> 根据官方文档的说明,这样设置并没有什么卵用.</p></li><li><p>使用 ruby filter 对字符进行转码</p><figure class="highlight javascript"><figcaption><span>1.8</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">filter &#123;</span><br><span class="line">    ruby &#123;</span><br><span class="line">        init =&gt; <span class="string">"require 'iconv'"</span></span><br><span class="line">        code =&gt; <span class="string">"</span></span><br><span class="line"><span class="string">            row = event.get('title')</span></span><br><span class="line"><span class="string">            #row = row.encoding.name</span></span><br><span class="line"><span class="string">            ic = Iconv.new('UTF-8', 'GBK')</span></span><br><span class="line"><span class="string">            row = ic.iconv(row)</span></span><br><span class="line"><span class="string">            event.set('test-covert', row)</span></span><br><span class="line"><span class="string">        "</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用ik对title进行分词</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">PUT /news_info_shadow</span><br><span class="line">&#123;</span><br><span class="line">  &quot;mappings&quot;: &#123;</span><br><span class="line">    &quot;_default_&quot; : &#123;</span><br><span class="line">      &quot;_all&quot; : &#123;</span><br><span class="line">        &quot;enabled&quot; : false</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;participle&quot;: &#123;</span><br><span class="line">      &quot;dynamic&quot; : true,</span><br><span class="line">      &quot;properties&quot; : &#123;</span><br><span class="line">        &quot;id&quot;: &#123;</span><br><span class="line">          &quot;type&quot;: &quot;long&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;title&quot;:&#123;</span><br><span class="line">          &quot;type&quot;: &quot;text&quot;,</span><br><span class="line">          &quot;analyzer&quot;: &quot;ik_smart&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p><a href="https://github.com/medcl/elasticsearch-analysis-ik" target="_blank" rel="noopener">分词插件ik</a></p><ul><li>配置说明:<br>创建一个名叫 news_info_shadow 的索引，分词器用 ik_smart，并创建一个 participle 的类型，里面有一个 title 的字段，指定其使用 ik_max_word 分词器</li></ul>]]></content>
      
      <categories>
          
          <category> elk使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> es </tag>
            
            <tag> logstash </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>lumen&amp;laravel使用Repositories</title>
      <link href="/2018/05/14/lumen-laravel%E6%80%BB%E7%BB%93/"/>
      <url>/2018/05/14/lumen-laravel%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<ol><li>composer require “bosnadev/repositories: 0.*”</li><li>composer update</li><li>创建repository类,继承Bosnadev\Repositories\Eloquent\Repository并实现model()方法.<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Repositories</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Bosnadev</span>\<span class="title">Repositories</span>\<span class="title">Contracts</span>\<span class="title">RepositoryInterface</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Bosnadev</span>\<span class="title">Repositories</span>\<span class="title">Eloquent</span>\<span class="title">Repository</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FilmsRepository</span> <span class="keyword">extends</span> <span class="title">Repository</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">model</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'App\Film'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><a id="more"></a><ol start="4"><li><p>创建model</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">namespace</span> <span class="title">App</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Film</span> <span class="keyword">extends</span> <span class="title">Model</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $primaryKey = <span class="string">'film_id'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $table = <span class="string">'film'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $casts = [</span><br><span class="line">        <span class="string">"rental_rate"</span>       =&gt; <span class="string">'float'</span></span><br><span class="line">    ];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在c层使用(注入)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Repositories</span>\<span class="title">FilmsRepository</span> <span class="title">as</span> <span class="title">Film</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FilmsController</span> <span class="keyword">extends</span> <span class="title">Controller</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> $film;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(Film $film)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;film = $film;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> \Response::json(<span class="keyword">$this</span>-&gt;film-&gt;all());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>####<a href="https://github.com/bosnadev/repository" target="_blank" rel="noopener">参考github地址</a></p>]]></content>
      
      <categories>
          
          <category> lumen踩过的坑 </category>
          
          <category> lumen中使用Repositories </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lumen </tag>
            
            <tag> laravel </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>luemn中使用全局helper</title>
      <link href="/2018/03/13/luemn%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%85%A8%E5%B1%80helper/"/>
      <url>/2018/03/13/luemn%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%85%A8%E5%B1%80helper/</url>
      <content type="html"><![CDATA[<ol><li>在composer.json中autoload节点下追加</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">"files": [</span><br><span class="line">    <span class="string">"app/Helper/helper.php"</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><ol start="2"><li>运行</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer dump-autoload</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> lumen </tag>
            
            <tag> laravel </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>lumen使用Eloquent的技巧.md</title>
      <link href="/2018/02/11/lumen%E4%BD%BF%E7%94%A8Eloquent%E7%9A%84%E6%8A%80%E5%B7%A7/"/>
      <url>/2018/02/11/lumen%E4%BD%BF%E7%94%A8Eloquent%E7%9A%84%E6%8A%80%E5%B7%A7/</url>
      <content type="html"><![CDATA[<ol><li>increment() or decrement()<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Instead of this:</span></span><br><span class="line">$article = Article::find($article_id);</span><br><span class="line">$article-&gt;read_count++;</span><br><span class="line">$article-&gt;save();</span><br><span class="line"><span class="comment">//you can do this</span></span><br><span class="line">$article = Article::find($article_id);</span><br><span class="line">$article-&gt;increment(<span class="string">'read_count'</span>);</span><br></pre></td></tr></table></figure></li></ol><a id="more"></a><ol start="2"><li><p>findOrFail()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$user = User::findOrFail($id); <span class="comment">//throw modelnotfound exception</span></span><br></pre></td></tr></table></figure></li><li><p>firstOrCreate()</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//bad demo</span></span><br><span class="line">$user = User::where(<span class="string">'email'</span>, $email)-&gt;first();</span><br><span class="line"><span class="keyword">if</span> (!$user) &#123;</span><br><span class="line">  User::create([</span><br><span class="line">    <span class="string">'email'</span> =&gt; $email</span><br><span class="line">  ]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//you can do this</span></span><br><span class="line">$user = User::firstOrCreate([<span class="string">'email'</span> =&gt; $email]);</span><br></pre></td></tr></table></figure></li><li><p>model中boot()方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">parent</span>::boot();</span><br><span class="line">        <span class="keyword">static</span>::updating(<span class="function"><span class="keyword">function</span><span class="params">($model)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="comment">// do some logging</span></span><br><span class="line">            <span class="comment">// override some property like $model-&gt;something = transform($something);</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//假设我们要生成uuid字段</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">parent</span>::boot();</span><br><span class="line">  <span class="keyword">self</span>::creating(<span class="function"><span class="keyword">function</span> <span class="params">($model)</span> </span>&#123;</span><br><span class="line">    $model-&gt;uuid = (string)Uuid::generate();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在定义模型关系的时候可以添加where等条件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">approvedUsers</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasMany(<span class="string">'App\User'</span>)-&gt;where(<span class="string">'approved'</span>, <span class="number">1</span>)-&gt;orderBy(<span class="string">'email'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>模型的默认参数列表</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Model</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $table = <span class="string">'users'</span>;</span><br><span class="line">    <span class="keyword">protected</span> $fillable = [<span class="string">'email'</span>, <span class="string">'password'</span>]; <span class="comment">// which fields can be filled with User::create()</span></span><br><span class="line">    <span class="keyword">protected</span> $dates = [<span class="string">'created_at'</span>, <span class="string">'deleted_at'</span>]; <span class="comment">// which fields will be Carbon-ized</span></span><br><span class="line">    <span class="keyword">protected</span> $appends = [<span class="string">'field1'</span>, <span class="string">'field2'</span>]; <span class="comment">// additional values returned in JSON</span></span><br><span class="line">    <span class="keyword">protected</span> $primaryKey = <span class="string">'uuid'</span>; <span class="comment">// it doesn't have to be "id"</span></span><br><span class="line">    <span class="keyword">public</span> $incrementing = <span class="keyword">false</span>; <span class="comment">// and it doesn't even have to be auto-incrementing!</span></span><br><span class="line">    <span class="keyword">protected</span> $perPage = <span class="number">25</span>; <span class="comment">// Yes, you can override pagination count PER MODEL (default 15)</span></span><br><span class="line">    <span class="keyword">const</span> CREATED_AT = <span class="string">'created_at'</span>;</span><br><span class="line">    <span class="keyword">const</span> UPDATED_AT = <span class="string">'updated_at'</span>; <span class="comment">// Yes, even those names can be overridden</span></span><br><span class="line">    <span class="keyword">public</span> $timestamps = <span class="keyword">false</span>; <span class="comment">// or even not used at all</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>更优雅的where</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//bad demo</span></span><br><span class="line">$users = User::where(<span class="string">'approved'</span>, <span class="number">1</span>)-&gt;get();</span><br><span class="line"><span class="comment">//you can do this</span></span><br><span class="line">$users = User::whereApproved(<span class="number">1</span>)-&gt;get();</span><br></pre></td></tr></table></figure></li><li><p>排序问题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//您有论坛主题但想通过最新帖子订购，</span></span><br><span class="line"><span class="comment">//该怎么办？顶部有最新更新主题的论坛中非常常见的要求</span></span><br><span class="line"><span class="comment">//首先定义关系</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">latestPost</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasOne(\App\Post::class)-&gt;latest();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//然后，在我们的控制器中，我们可以做到</span></span><br><span class="line">$users = Topic::with(<span class="string">'latestPost'</span>)-&gt;get()-&gt;sortByDesc(<span class="string">'latestPost.created_at'</span>);</span><br></pre></td></tr></table></figure></li><li><p>优雅的使用when 而不再使用if else</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//bad demo </span></span><br><span class="line"><span class="keyword">if</span> (request(<span class="string">'filter_by'</span>) == <span class="string">'likes'</span>) &#123;</span><br><span class="line">    $query-&gt;where(<span class="string">'likes'</span>, <span class="string">'&gt;'</span>, request(<span class="string">'likes_amount'</span>, <span class="number">0</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (request(<span class="string">'filter_by'</span>) == <span class="string">'date'</span>) &#123;</span><br><span class="line">    $query-&gt;orderBy(<span class="string">'created_at'</span>, request(<span class="string">'ordering_rule'</span>, <span class="string">'desc'</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//you can do this</span></span><br><span class="line">$query = Author::query();</span><br><span class="line">$query-&gt;when(request(<span class="string">'filter_by'</span>) == <span class="string">'likes'</span>, <span class="function"><span class="keyword">function</span> <span class="params">($q)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $q-&gt;where(<span class="string">'likes'</span>, <span class="string">'&gt;'</span>, request(<span class="string">'likes_amount'</span>, <span class="number">0</span>));</span><br><span class="line">&#125;);</span><br><span class="line">$query-&gt;when(request(<span class="string">'filter_by'</span>) == <span class="string">'date'</span>, <span class="function"><span class="keyword">function</span> <span class="params">($q)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $q-&gt;orderBy(<span class="string">'created_at'</span>, request(<span class="string">'ordering_rule'</span>, <span class="string">'desc'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//还可以这样玩</span></span><br><span class="line">$query = User::query();</span><br><span class="line">$query-&gt;when(request(<span class="string">'role'</span>, <span class="keyword">false</span>), <span class="function"><span class="keyword">function</span> <span class="params">($q, $role)</span> </span>&#123; </span><br><span class="line">    <span class="keyword">return</span> $q-&gt;where(<span class="string">'role_id'</span>, $role);</span><br><span class="line">&#125;);</span><br><span class="line">$authors = $query-&gt;get();</span><br></pre></td></tr></table></figure></li><li><p>blade模板使用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//假设post属于Author，然后是Blade代码：</span></span><br><span class="line">&#123;&#123; $post-&gt;author-&gt;name &#125;&#125;</span><br><span class="line"><span class="comment">//假设现在作者删除了</span></span><br><span class="line">&#123;&#123; $post-&gt;author-&gt;name ?? <span class="string">''</span> &#125;&#125;</span><br><span class="line"><span class="comment">//可以使用eloquent来控制</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">author</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;belongsTo(<span class="string">'App\Author'</span>)-&gt;withDefault();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//在此示例中，如果没有作者附加到帖子，则author()关系将返回空App\Author模型。</span></span><br><span class="line"><span class="comment">//此外，我们可以将默认属性值分配给该默认模型。</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">author</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;belongsTo(<span class="string">'App\Author'</span>)-&gt;withDefault([</span><br><span class="line">          <span class="string">'name'</span> =&gt; <span class="string">'Guest Author'</span></span><br><span class="line">      ]);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>eloquent中使用原生sql</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// whereRaw</span></span><br><span class="line">$orders = DB::table(<span class="string">'orders'</span>)</span><br><span class="line">    -&gt;whereRaw(<span class="string">'price &gt; IF(state = "TX", ?, 100)'</span>, [<span class="number">200</span>])</span><br><span class="line">    -&gt;get();</span><br><span class="line"></span><br><span class="line"><span class="comment">// havingRaw</span></span><br><span class="line">Product::groupBy(<span class="string">'category_id'</span>)-&gt;havingRaw(<span class="string">'COUNT(*) &gt; 1'</span>)-&gt;get();</span><br><span class="line"></span><br><span class="line"><span class="comment">// orderByRaw</span></span><br><span class="line">User::where(<span class="string">'created_at'</span>, <span class="string">'&gt;'</span>, <span class="string">'2016-01-01'</span>)</span><br><span class="line">  -&gt;orderByRaw(<span class="string">'(updated_at - created_at) desc'</span>)</span><br><span class="line">  -&gt;get();</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      <categories>
          
          <category> eloquent技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lumen </tag>
            
            <tag> laravel </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>navicat 破解版 for mac</title>
      <link href="/2017/10/23/navicat-%E7%A0%B4%E8%A7%A3%E7%89%88-for-mac/"/>
      <url>/2017/10/23/navicat-%E7%A0%B4%E8%A7%A3%E7%89%88-for-mac/</url>
      <content type="html"><![CDATA[<h4>有钱的请支持正版</h4><br><a href="https://www.waitsun.com/navicat-premium-12-0-19.html" target="_blank" rel="noopener">download</a>:<br><br><em>如若提示打不开请按照如下操作</em><br>1. 在隐私设置任意来源<br>2. sudo spctl –master-disable<br><br><h4>over~</h4>]]></content>
      
      
        <tags>
            
            <tag> navicat </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
